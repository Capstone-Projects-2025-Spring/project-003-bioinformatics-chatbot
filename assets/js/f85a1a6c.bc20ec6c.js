"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6244],{21926:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=n(74848),s=n(28453);const o={sidebar_position:1},r="Unit tests",c={id:"testing/unit-testing",title:"Unit tests",description:"Backend",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-003-bioinformatics-chatbot/docs/testing/unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-003-bioinformatics-chatbot/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"korlovskiy",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-003-bioinformatics-chatbot/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-003-bioinformatics-chatbot/docs/testing/integration-testing"}},a={},d=[{value:"Backend",id:"backend",level:2},{value:"Library",id:"library",level:3},{value:"Frontend",id:"frontend",level:2},{value:"Library",id:"library-1",level:3}];function l(t){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"unit-tests",children:"Unit tests"}),"\n",(0,i.jsx)(e.h2,{id:"backend",children:"Backend"}),"\n",(0,i.jsx)(e.h3,{id:"library",children:"Library"}),"\n",(0,i.jsxs)(e.p,{children:["Pytest was chosen for backend testing due to its ability to easily integrate with\nFlask. For coverage we are using Coverage.py for its ability to monitor pytest. Each\nfunction and route will consist be tested via pytest on the backend. To run tests\n",(0,i.jsx)(e.code,{children:"python -m pytest -vv"})]}),"\n",(0,i.jsx)(e.h2,{id:"frontend",children:"Frontend"}),"\n",(0,i.jsx)(e.h3,{id:"library-1",children:"Library"}),"\n",(0,i.jsxs)(e.p,{children:["We are using vitetest for frontend testing in React. Viteest was chosen due to\nits ability to easily inegrate compenent testing in a React-Vite project. Each component\nwill have tests associated with it. To run tests ",(0,i.jsx)(e.code,{children:"cd frontend && npm run test"}),"."]})]})}function u(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function r(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);